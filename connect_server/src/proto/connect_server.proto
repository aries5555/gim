package gim;

import "pair.proto";

message LoginRequest{
	required string id = 1;//id of user or logic server
	optional int32 type = 2;//type 0:client, > 0:logic server
	optional string version = 3;//client version
	optional string token = 4; //use for check
	repeated Pair kvs = 5;
}


message LoginResponse{
	required int32 status = 1;//if 0 success, else fail
	optional string sessid = 2;//the session id, 
	optional int64 server_time = 3;//server timestamp
} 

message Address{
	optional string ip = 1;
	optional int32 port = 2;
}

message RedirectResponse{
	required int32 status = 1;//if 0 success, else fail
	repeated Address addrs = 2;
} 


message ServiceRequest{
	optional string from_sessid = 1;//from sessid
	optional string to_sessid = 2;//to sessid
	required int32 from_type = 3;// 100:push 200:peer
	required int32 to_type = 4;// 100:push 200:peer
	required string sn = 5;//each req has an unique sn
	optional bytes payload = 6;// payload
}

message ServiceResponse{
	optional string from_sessid = 1;//from sessid
	optional string to_sessid = 2; //to sessid
	required int32 from_type = 3;
	required int32 to_type = 4;
	required string sn = 5;//each req has an unique sn
	required int32 status = 6;// 0 success
	optional bytes payload = 7;
}

message KickCliRequest{
	optional string sessid = 1;
	optional string id = 2;
	optional int32 type = 3;
	optional bytes reason = 4;
}
