package gim;

import "pair.proto";

message LoginRequest{
	required string cid = 1;//cid of client
	required int64 time = 2; //client timestamp
	optional string version = 3;//client version
	optional int32 enc = 4;//0: raw data, 1:enc
	optional string token = 5; //use for check
	repeated Pair kvs = 6;
}


message LoginResponse{
	required int32 status = 1;//if 0 success, else fail
	optional string sessid = 2;//the session id, 
	optional int64 time = 3;//server timestamp
} 

message Address{
	optional string ip = 1;
	optional int32 port = 2;
}

message RedirectResponse{
	required int32 status = 1;//if 0 success, else fail
	repeated Address addrs = 2;
} 

message SetTimeResponse{
	required int32 status = 1;//if 0 success, else fail
	required int64 server_time = 2;
} 

message ServiceRequest{
	optional string sessid = 1;
	required int32 svtype = 2;// 100:push 200:peer
	required string sn = 3;//each req has an unique sn
	optional bytes payload = 4;// payload
}

message ServiceResponse{
	optional string sessid = 1;
	required int32 svtype = 2;
	required string sn = 3;//each req has an unique sn
	required int32 status = 4;// 0 success
	optional bytes payload = 5;
}

message SvRegRequest{
	required int32 svtype = 1;
}

message SvRegResponse{
	required int32 status = 1;
}

message KickCliRequest{
	optional bytes reason = 1;
}
